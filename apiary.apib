FORMAT: 1A

# MXcloud Data Collection
MXcloud Data Collection Related API.

Resources provided by Cloud Gateway are categorized in */mxc/** related resources.

Resources provided by Cloud Server are categorized in */mxcs/** related resources.

# Common Notations

## Date Format

    date  = year "-" month "-" day
    year  = 4DIGIT
    month = 2DIGIT
    day   = 2DIGIT

## Datetime Format

    datetime = date "T" time "Z"
    date     = year "-" month "-" day
    year     = 4DIGIT
    month    = 2DIGIT
    day      = 2DIGIT
    time     = hour ":" minute ":" second 0*1("." fragment)
    hour     = 2DIGIT
    minute   = 2DIGIT
    second   = 2DIGIT
    fragment = 1*6DIGIT

# group MXC Settings

## MXC Configuration [/mxc/config]

### Get Configuration [GET]

Response Attributes:
- *sensorDataForwardCron*: required, string.
- *sensorDataExpireTimeSec*: required, integer.

+ Response 200 (application/json)

        {
            "sensorDataForwardCron": "* * * * *",
            "sensorDataExpireTimeSec": 86400
        }

### Update Configuration [PUT]

Request Attributes:
- *sensorDataForwardCron*: required, string.
- *sensorDataExpireTimeSec*: required, integer.

Response Attributes:
- Same as *GET* response.

+ Request (application/json)

        {
            "sensorDataForwardCron": "* * * * *",
            "sensorDataExpireTimeSec": 86400
        }

+ Response 200 (application/json)

        {
            "sensorDataForwardCron": "* * * * *",
            "sensorDataExpireTimeSec": 86400
        }

# group Reading Drop Count

## Drop Count [/mxc/dropcount]

### Get Drop Count [GET]

Response Attributes:
- *storDropCount*: required, integer. Number of Readings dropped, caused by out-of-storage.
- *fwdDropCount*: required, integer. Number of Readings dropped, caused by readings-expired.

+ Response 200 (application/json)

        {
            "storDropCount": 120,
            "fwdDropCount": 99
        }

# group Job Management

## Get Job List [/mxc/jobs?pageSize={pageSize}&page={page}]

Query Attributes:
- *pageSize*: Default *30*.
- *page*: Start from *1*. Default *1*.

### Get [GET]

Resposne Attributes:
- *totalCount*: required, integer.
- *pageSize*: required, integer.
- *page*: required, integer.
- *jobList*: required, object array.
    - *id*: required, integer.
      Job ID.
    - *name*: required, string.
      Given job name.
    - *command*: required, string.
      Shell command to execute.
    - *logCount*: required, integer.
      Number of logs to keep on Cloud Gateway.
    - *scheduleList*: required, object array.
        - *id*: required, integer.
          Schedule ID.
        - *name*: required, string.
          Given schedule name.
        - *enabled*: required, boolean.
          Enable/disable current schedule.
        - *period-sec*: optional, integer.
          Triggered periodically.
        - *cron*: optional, string.
          Cron schedule string.
    - *isRunning*: required, boolean.
      Indicates whether the job is running.
    - *executionCount*: required, integer.
    - *lastExecution*: required, object.
      If the job hasn't been executed yet, all values below would not present.
        - *startTime*: optional, string in Datetime format.
        - *endTime*: optional, string in Datetime format.
        - *exitStatus*: optional, integer.
          Value *0* indicates success, *non-0* indicates failure.

In a schedule configuration, only one of *period-sec* and *cron* should present.

+ Response 200 (application/json)

        {
            "totalCount": 2,
            "pageSize": 30,
            "page": 1,
            "jobList": [
                {
                    "id": 1,
                    "name": "read iologik",
                    "command": "mxcdemo_iologik 192.168.31.75"
                    "logCount": 30,
                    "scheduleList": [
                        {
                            "id": 1,
                            "name": "every 10 seconds",
                            "enabled": true,
                            "period-sec": 10
                        },
                        {
                            "id": 2,
                            "name": "every minute",
                            "enabled": false,
                            "cron": "* * * * *"
                        }
                    ],
                    "isRunning": false,
                    "executionCount": 15,
                    "lastExecution": {
                        "startTime": "2014-11-24T04:42:17.260861Z",
                        "endTime": "2014-11-24T04:42:19.073265Z",
                        "exitStatus": 0
                    }
                },
                {
                    "id": 2,
                    "name": "read load profile",
                    "command": "bin/ansi --read-load-profile",
                    "logCount": 7,
                    "scheduleList": [
                        {
                            "id": 1,
                            "name": "every quarter",
                            "enabled": true,
                            "cron": "*/15 * * * *"
                        }
                    ],
                    "isRunning": true,
                    "executionCount": 36,
                    "lastExecution": {
                        "startTime": "2015-03-05T00:03:04.299312Z",
                        "endTime": "2015-03-05T00:03:18.488753Z",
                        "exitStatus": 0
                    }
                }
            ]
        }

## Manage Job [/mxcs/jobs]

### Create Job [POST]

Request Attributes:
- *name*: required, string.
- *command*: required, string.
- *logCount*: required, integer.
- *scheduleList*: optional, object array.
    - *name*: required, string.
    - *enabled*: optional, boolean.
      Default *true*.
    - *period-sec*: optional, integer.
    - *cron*: optional, string.

Response Attributes:
+ *id*: required, ID of the Job created.

Only one of *period-sec* and *cron* should present in a schedule description.

+ Request (application/json)

        {
            "name": "read load profile",
            "command": "bin/ansi --read-load-profile",
            "logCount": 15,
            "scheduleList": [
                {
                    "name": "every quarter",
                    "enabled": true,
                    "cron": "1/16/31/46 * * * *",
                }
            ]
        }

+ Response 200 (application/json)

        {
            "id": 3
        }

### Delete Job List [DELETE]

Request Attributes:
- *idList*: required, integer array.
  A list of Job IDs to be deleted.

Response Attributes:
- *message*: required, string.
  Human-readable message.

+ Request (application/json)

        {
            "idList": [
                1, 3, 4
            ]
        }

+ Response 200 (application/json)

        {
            "message": "success"
        }

## Manage Job [/mxc/job/{job_id}]

Resource Attributes:
- *job_id*: required.
  The ID of Job of interest.

### Get [GET]

Response Attributes:
- *id*: required, integer.
  Job ID.
- *name*: required, string.
  Given job name.
- *command*: required, string.
  Shell command to execute.
- *logCount*: required, integer.
  Number of logs to keep on Cloud Gateway.
- *scheduleList*: required, object array.
    - *id*: required, integer.
      Schedule ID.
    - *name*: required, string.
      Given schedule name.
    - *enabled*: required, boolean.
      Enable/disable current schedule.
    - *period-sec*: optional, integer.
      Triggered periodically.
    - *cron*: optional, string.
      Cron schedule string.
- *isRunning*: required, boolean.
  Indicates whether the job is running.
- *executionCount*: required, integer.
- *lastExecution*: required, object.
  If the job hasn't been executed yet, all values below would not present.
    - *startTime*: optional, string in Datetime format.
    - *endTime*: optional, string in Datetime format.
    - *exitStatus*: optional, integer.
      Value *0* indicates success, *non-0* indicates failure.

+ Response 200 (application/json)

        {
            {
                "id": 1,
                "name": "read iologik",
                "command": "mxcdemo_iologik 192.168.31.75"
                "logCount": 30,
                "scheduleList": [
                    {
                        "id": 1,
                        "name": "every 10 seconds",
                        "enabled": true,
                        "period-sec": 10
                    },
                    {
                        "id": 2,
                        "name": "every minute",
                        "enabled": false,
                        "cron": "* * * * *"
                    }
                ],
                "isRunning": false,
                "executionCount": 15,
                "lastExecution": {
                    "startTime": "2014-11-24T04:42:17.260861Z",
                    "endTime": "2014-11-24T04:42:19.073265Z",
                    "exitStatus": 0
                }
            }
        }

### Put [PUT]

Request Attributes:
- *id*: optional, integer.
  If present, it should match *job_id* in resource string.
- *name*: optional, string.
- *command*: optional, string.
- *logCount*: optional, integer.
- *scheduleList*: optional, object array.
    - *name*: required, string.
    - *enabled*: optional, boolean.
      Default *true*.
    - *period-sec*: optional, integer.
    - *cron*: optional, string.
- *isRunning*: optional, boolean.
  Ignored.
- *executionCount*: optional, integer.
  Ignored.
- *lastExecution*: optional, object.
  Ignored.

Response Attributes:
- *message*: required, string.
  Human-readable message.

If *scheduleList* exist, it replaces all schedule configurations.

+ Request (application/json)

        {
            "name": "read load profile every 15 minutes",
            "command": "bin/ansi --read-load-profile",
            "logCount": 120,
            "scheduleList": [
                {
                    "name": "every 15 minutes",
                    "enabled": true,
                    "period-sec": 900
                }
            ]
        }

+ Response 200 (application/json)

        {
            "id": 3
        }

## On-demand Trigger [/mxc/jobs/{job_id}/trigger]

Resource Attributes:
- *job_id*: integer.
  Job ID.

### Post [POST]

Response Attributes:
- *startTime*: required, string in *Datetime* format.
- *endTime*: required, string in *Datetime* format.
- *exitStatus*: required, integer.

+ Response 200 (application/json)

        {
            "startTime": "2014-11-24T04:42:17.260861Z",
            "endTime": "2014-11-24T04:42:19.073265Z",
            "exitStatus": 0
        }

## Manage Schedule List [/mxc/jobs/{job_id}/schedules]

### Get Schedule List [GET]

Response Attributes:
- *scheduleList*: required, object array.
    - *id*: required, integer.
      Schedule ID.
    - *name*: required, string.
      Given schedule name.
    - *enabled*: required, boolean.
      Enable/disable current schedule.
    - *period-sec*: optional, integer.
      Triggered periodically.
    - *cron*: optional, string.
      Cron schedule string.

+ Response 200 (application/json)

        {
            "scheduleList": [
                {
                    "id": 1,
                    "name": "every 10 seconds",
                    "enabled": true,
                    "period-sec": 10
                },
                {
                    "id": 2,
                    "name": "every minute",
                    "enabled": false,
                    "cron": "* * * * *"
                }
            ]
        }

### Create Schedule [POST]

Request Attributes:
- *name*: required, string.
- *enabled*: optional, boolean.
  Default *true*.
- *period-sec*: optional, integer.
- *cron*: optional, string.

Only one of *period-sec* and *cron* should exist.

Response Attributes:
- *id*: required, integer.
  ID of the Schedule created.

+ Request (application/json)

        {
            "name": "every quarter",
            "enabled": true,
            "cron": "1/16/31/46 * * * *"
        }

+ Response 200 (application/json)

        {
            "id": 4
        }

### Delete Schedule List [DELETE]

Request Attributes:
- *idList*: required, integer array.
  A list of Schedule IDs to be deleted.

Response Attributes:
- *message*: required, string.
  Human-readable message.

+ Request (application/json)

        {
            "idList": [
                1, 3, 4
            ]
        }

+ Response 200 (application/json)

        {
            "message": "success"
        }

## Manage Schedule [/mxc/jobs/{job_id}/schedules/{schedule_id}]

Resource Attributes:

### Get Schedule [GET]

Response Attributes:
- *id*: required, integer.
  Schedule ID.
- *name*: required, string.
  Given schedule name.
- *enabled*: required, boolean.
  Enable/disable current schedule.
- *period-sec*: optional, integer.
  Triggered periodically.
- *cron*: optional, string.
  Cron schedule string.

+ Response 200 (application/json)

        {
            "id": 1,
            "name": "every 10 seconds",
            "enabled": true,
            "period-sec": 10
        }

### Update Schedule [PUT]

Request Attributes:
- *id*: optional, integer.
  If given, it should match *schedule_id* in resource string.
- *name*: optioanl, string.
- *enabled*: optional, boolean.
  Default *true*.
- *period-sec*: optional, integer.
- *cron*: optional, string.

Response Attributes:
- *message*: required, string.
  Human-readable message.

+ Request (application/json)

        {
            "name": "every 15 minutes",
            "enabled": true,
            "period-sec": 900
        }

+ Response 200 (application/json)

        {
            "message": "success"
        }

## Get Log List [/mxc/jobs/{job_id}/logs?pageSize={pageSize}&page={page}]

Query Attributes:
- *pageSize*: Default *30*.
- *page*: Start from *1*. Default *1*.

### Get [GET]

Response Attributes:
- *totalCount*: required, integer.
- *pageSize*: required, integer.
- *page*: required, integer.
- *logList*: required, object array.
    - *id*: required, string.
      Log ID.
    - *startTime*: required, string in Datetime format.
    - *endTime*: required, string in Datetime format.
    - *exitStatus*: required, integer.
      Value *0* indicates success, *non-0* indicates failure.

Log list returned is ordered by *startTime* in decending order.

+ Response 200 (application/json)

        {
            "totalCount": 2,
            "pageSize": 30,
            "page": 1,
            "logList":
            [
                {
                    "id": "20141124045217",
                    "startTime": "2014-11-24T04:52:17Z",
                    "endTime": "2014-11-24T04:53:17Z",
                    "exitStatus": 127
                },
                {
                    "id": "20141124044217",
                    "startTime": "2014-11-24T04:42:17Z",
                    "endTime": "2014-11-24T04:43:17Z",
                    "exitStatus": 0
                }
            ]
        }

## Export Log [/mxc/jobs/{job_id}/logs/{log_id}/export]

Resource Attributes:
- *job_id*: integer.
  Job ID.
- *log_id*: string.
  Log ID.

### Post [POST]

This request causes Cloud Gateway to *POST* the *Log File* to the designated *url*.

Request Attributes:
- *url*: required, string.
  URL given for Cloud Gateway to *POST* the log file to.

Response Attributes:
- *startTime*: required, string in *Datetime* format.
  Time when *POST* started.
- *endTime*: required, string in *Datetime* format.
  Time when *POST* ended.
- *url*: required, string.

+ Request (application/json)

        {
            "url": "https://mxc-cs/log/upload/JEJC9bbc832k1Sc"
        }

+ Response 200 (application/json)

        {
            "startTime": "2014-12-03T04:42:17.260861Z",
            "endTime": "2014-12-03T04:48:36.992303Z",
            "url": "https://mxc-cs/log/upload/JEJC9bbc832k1Sc"
        }

# group Custom Bundle Management

## Custom Bundle [/mxc/custom-bundle]

### Get Custom Bundle Information [GET]

Response Attributes:
- *name*: required, string.
- *url*: required, string.

Get information about currently deployed client-bundle.

+ Response 200 (application/json)

        {
            "name": "my-application-bundle.tgz",
            "url": "https://mxc-cs/client-bundles/UD63CVU7QPLE"
        }

## Deploy Custom Bundle [/mxc/custom-bundle/update]

### Request Deployment [POST]

Request Attributes:
- *name*: required, string.
- *url*: required, string.

Starting a request while a previous request is in progress, results in error.

+ Request (application/json)

        {
            "name": "my-application-bundle.tgz",
            "url": "https://mxc-cs/client-bundles/UD63CVU7QPLE"
        }

+ Response 200 (application/json)

### Get Deployment Status [GET]

Response Attributes:
- *name*: required, string.
- *url*: required, string.
- *progress*: required, float. Indcating overall progress, *1.0* indicates complete.
- *status*: required, string. Can be one of "idle", "inprogress", "failed".

+ Response 200 (application/json)

        {
            "name": "my-application-bundle.tgz",
            "url": "https://mxc-cs/client-bundles/UD63CVU7QPLE",
            "progress": 0.39,
            "status": "inprogress"
        }

# group Cloud Gateway Management

## Get Cloud Gateway List [/mxcs/cgs?cgGroupId={cgGroupId}&keyword={keyword}&page={page}&pageSize={pageSize}]

Query Attributes:
- *cgGroupId*: optional, integer.
  If given, only CGs in the given group are returned.
- *keyword*: optional, string.
  Return only Cloud Gateways with *id* or *aliasName* similar to the given string.
- *page*: optional, integer. Default *1*.
- *pageSize*: optional, integer. Default *30*.

### Get [GET]

Response Attributes:
- *totalCount*: required, integer. Number of CGs in the list.
- *pageSize*: required, integer.
- *page*: required, integer.
- *cgList*: required, object list.
    - *id*: required. CG ID of each authorized CG.
    - *aliasName*: required, string.
    - *isOnline*: required, boolean.
    - *lastUpdateTime*: required, string in *Datetime* format.
    - *cellularUsageBytes*: optional, integer.
      Exists only when CG has Cellular Modules.
    - *runtimeVersion*: required, string.
    - *equipmentCount*: required, integer.
    - *onlineEquipmentCount*: required, integer.
    - *metas*: required, object.
      Contains a dictionary of previously stored key-value pairs.

+ Response 200 (application/json)

        {
            "totalCount": 2,
            "pageSize": 10,
            "page": 1,
            "cgList": [
                {
                    "id": "cg-0090e8001234",
                    "aliasName": "CG-01",
                    "isOnline": true,
                    "lastUpdateTime": "2014-02-12T14:31:49.298123Z",
                    "cellularUsageBytes": 29891893,
                    "runtimeVersion": "1.0.0",
                    "equipmentCount": 20,
                    "onlineEquipmentCount": 15,
                    "metas": {
                        "latitude": "41.428342",
                        "longitude": "2.94482"
                    }
                },
                {
                    "id": "cg-0090e8004321",
                    "aliasName": "CG-02",
                    "isOnline": false,
                    "lastUpdateTime": "2014-02-12T14:31:49.298123Z",
                    "cellularUsageBytes": 29891893,
                    "runtimeVersion": "1.0.0",
                    "equipmentCount": 20,
                    "onlineEquipmentCount": 15,
                    "metas": {
                        "latitude": "41.428342",
                        "longitude": "2.94482"
                    }
                }
            ]
        }

## Manage Cloud Gateway [/mxcs/cgs]

### Create Cloud Gateway [POST]

Request Attributes:
- *id*: required. ID of the CG to be created.
- *aliasName*: required, string.
  Can be empty-string.
- *metas: optional, object.
  Contains a dictionary of key-value pairs to be stored relative to the newly
  created CG.

Response Attributes:
- *id*: required, ID of the CG just created.

+ Request (application/json)

        {
            "id": "cg-0090e8001234",
            "aliasName": "CG-03",
            "metas": {
                "latitude": "41.428342",
                "longitude": "294482"
            }
        }

+ Response 200 (application/json)

        {
            "id": "cg-0090e8001234"
        }

### Delete Cloud Gateway List [DELETE]

Request Attributes:
- *idList*: required, string array.
  Contains a list of IDs of the CGs to be deleted.

Response Attributes:
- *message*: required, string.
  Human-readable message.

+ Request (application/json)

        {
            "idList": [
                "cg-0090e8001234",
                "cg-0090e8004321"
            ]
        }

+ Response 200 (application/json)

        {
            "message": "success"
        }

## Get Cloud Gateway [/mxcs/cgs/{cg_id}]

Resource Attributes:
- *cg_id*: required. The ID of CG of interest.

### Get [GET]

Response Attributes:
- *id*: required, string.
- *aliasName*: required, string.
- *isOnline*: required, boolean.
- *lastUpdateTime*: required, string in *Datetime* format.
- *cellularUsageBytes*: optional, integer.
  Exists only when CG has Cellular Modules.
- *runtimeVersion*: required, string.
- *equipmentCount*: required, integer.
- *onlineEquipmentCount*: required, integer.
- *metas*: required, object.
  Contains a dictionary of previously stored key-value pairs.

+ Response 200 (application/json)

        {
            "id": "cg-0090E8001234",
            "aliasName": "CG-08",
            "isOnline": true,
            "lastUpdateTime": "2014-02-12T14:31:49.298123Z",
            "cellularUsageBytes": 29891893,
            "runtimeVersion": "1.0.0",
            "equipmentCount": 20,
            "onlineEquipmentCount": 15,
            "metas": {
                "latitude": "41.428342",
                "longitude": "2.94482"
            }
        }

### Put [PUT]

Request Attributes:
- *id*: optional, string.
  If exist, should match *cg_id* in resource string.
- *aliasName*: optional, string.
  Replaces aliasName.
- *isOnline*: optional, boolean.
  Ignored.
- *lastUpdateTime*: optional, string.
  Ignored.
- *cellularUsageBytes*: optional, integer.
  Ignored.
- *runtimeVersion*: optional, string.
  Ignored.
- *equipmentCount*: optional, integer.
  Ignored.
- *onlineEquipmentCount*: optional, integer.
  Ignored.
- *metas*: optional, object.
  Replaces metas currently stored.

Response Attributes:
- *message*: required, string.
  Human-readable message.

+ Request (application/json)

        {
            "aliasName": "new-alias-name",
            "metas": {
                "latitude": "44.323123",
                "longitude": "1.932132",
            }
        }

+ Response 200 (application/json)

        {
            "message": "success"
        }

## Manage Meta Entries [/mxcs/cgs/{cg_id}/metas]

Resource Attributes:
- *cg_id*: string.

### Update Meta Entries [PUT]

Update key-value pairs that are already exist.

Request Attributes:
- *metas*: required, object.
  Contains a dictionary of key-value pairs to be updated.

Response Attributes:
- *message*: required, string.
  Human-readable message.

+ Request (application/json)

        {
            "metas": {
                "latitude": "41.428342",
            }
        }

+ Response 200 (application/json)

        {
            "message": "success"
        }

# group Equipment Management

## Get Equipment List [/mxcs/equipments?cgId={cgId}&groupId={groupId}&keyword={keyword}&page={page}&pageSize={pageSize}]

Query Attributes:
- *cgId*: optional, string.
  Only Equipments related to this Cloud Gateway is returned.
- *groupId*: optional, string.
  Only Equipments that are in the Group are returned.
- *keyword*: optional, string.
  Return only Equipments with *id* similar to the given string.
- *page*: optional, integer. Default *1*.
- *pageSize*: optional, integer. Default *30*.

### Get [GET]

Response Attributes:
- *totalCount*: required, integer. Number of Equipments in the list.
- *pageSize*: required, integer.
- *page*: required, integer.
- *eqList*: required, object list.
    - *id*: required, string. Equipment ID.
    - *isOnline*: required, boolean.
    - *readingCount*: required, integer.
    - *lastUpdateTime*: required, string in *Datetime* format.
    - *lastUpdateGateway*: required, string.
      The Gateway this Equipment last reported through.
    - *metas*: required, object.
      Contains a dictionary of key-value pairs to be updated.

+ Response 200 (application/json)

        {
            "totalCount": 2,
            "pageSize": 10,
            "page": 1,
            "eqList": [
                {
                    "id": "uc-81xx-0090e800e5ee",
                    "isOnline": true,
                    "readingCount": 2048,
                    "lastUpdateTime": "2015-02-12T14:31:49.298123Z",
                    "lastUpdateGateway": "cg-0090e8001234",
                    "metas": {
                        "latitude": "41.428342",
                        "longitude": "2.94482"
                    }
                },
                {
                    "id": "iologik-e2242",
                    "isOnline": true,
                    "readingCount": 1037,
                    "lastUpdateTime": "2015-02-12T14:31:49.298123Z",
                    "lastUpdateGateway": "cg-0090e8004321",
                    "metas": {
                    }
                }
            ]
        }

## Delete Equipment List [/mxcs/equipments]

### Delete [DELETE]

Deleting an Equipment deletes all the *Readings* reported by that Equipment.

Request Attributes:
- *idList*: required, string array.
  Contains a list of IDs of the Equipments to be deleted.

Response Attributes:
- *message*: required, string.
  Human-readable message.

+ Request (application/json)

        {
            "idList": [
                "uc-81xx-0090e800e5ee"
            ]
        }

+ Response 200 (application/json)

        {
            "message": "success"
        }

## Manage Equipment [/mxcs/equipments/{equipment_id}]

Resource Attributes:
- *equipment_id*: string.

### Get [GET]

Response Attributes:
- *id*: required, string. Equipment ID.
- *isOnline*: required, boolean.
- *readingCount*: required, integer.
- *lastUpdateTime*: required, string in *Datetime* format.
- *lastUpdateGateway*: required, string.
  The Gateway this Equipment last reported through.
- *metas*: required, object.
  Contains a dictionary of key-value pairs to be updated.

+ Response 200 (application/json)

        {
            "id": "iologik-e2242",
            "isOnline": true,
            "readingCount": 1037,
            "lastUpdateTime": "2015-2-12T14:31:49.298123Z",
            "lastUpdateGateway": "cg-0090e8004321",
            "metas": {
                "latitude": "40.428342",
                "longitude": "1.94482"
            }
        }

## Manage Meta Entries [/mxcs/equipments/{equipment_id}/metas]

Resource Attributes:
- *equipment_id*: string.

### Update Meta Entries [PUT]

Update key-value pairs that are already exist.

Request Attributes:
- *metas*: required, object.
  Contains a dictionary of key-value pairs to be updated.

Response Attributes:
- *message*: required, string.
  Human-readable message.

+ Request (application/json)

        {
            "metas": {
                "latitude": "41.428342",
            }
        }

+ Response 200 (application/json)

        {
            "message": "success"
        }

### Create Meta Entries [POST]

Create new key-value pairs.

If any of the keys in *metas* already exists, none of the key-value pairs would
be created and error will be reponsed.

Request Attributes:
- *metas*: required, object.
  Contains a dictionary of key-value pairs to be created.

Response Attributes:
- *message*: required, string.
  Human-readable message.

+ Request (application/json)

        {
            "metas": {
                "latitude": "41.428342",
                "longitude": "2.94482"
            }
        }

+ Response 200 (application/json)

        {
            "message": "success"
        }

# group Manage Groups in CS

## Get CG Group List [/mxcs/cg-groups?keyword={keyword}&page={page}&pageSize={pageSize}]

Query Attributes:
- keyword: optional, string.
  Return only CG Groups with *id* similar to the given string.
- page: optional, integer. Default *1*.
- pageSize: optional, integer. Default *30*.

### Get [GET]

Response Attributes:
- *totalCount*: required, integer.
- *pageSize*: required, integer.
- *page*: required, integer.
- *cgGroupList*: required, object list.
    - *id*: required, string.
      Group ID.
    - *aliasName*: required, string.
      Group alias name.
    - *cgList*: required, string array.
      IDs of the CGs in the Group.

+ Response 200 (application/json)

        {
            "totalCount": 2,
            "pageSize": 30,
            "page": 1,
            "cgGroupList": [
                {
                    "id": "moxa-2014",
                    "aliasName": "moxa-2014",
                    "cgList": [
                        "cg-0090e8001234",
                        "cg-0090e8004321"
                    ]
                },
                {
                    "id": "moxa-2015",
                    "aliasName": "moxa-2015",
                    "cgList": [
                    ]
                }
            ]
        }

## Manage CG Group [/mxcs/cg-groups]

### Create CG Group [POST]

(not implemented yet)

Request Attributes:
- *id*: required, string.
- *aliasName*: required, string.
  Can be empty-string.
- *cgList*: required, string list.
  A list of CG IDs to be inserted into the group.

Response Attributes:
- *id*: required, ID of the CG Group just created.

+ Request (application/json)

        {
            "id": "moxa-2014",
            "aliasName": "moxa-2014",
            "cgList": [
                "cg-0090e8001234",
                "cg-0090e8004321"
            ]
        }

+ Response 200 (application/json)

        {
            "id": "moxa-2014"
        }

### Delete CG Group List [DELETE]

Request Attributes:
- *cgGroupList*: required, string array.
  Contains a list of IDs of the CGs to be deleted.

Response Attributes:
- *message*: required, string.
  Human-readable message.

+ Request (application/json)

        {
            "cgGroupList": [
                "moxa-2014",
                "moxa-2015"
            ]
        }

+ Response 200 (application/json)

        {
            "message": "success"
        }

## Manage CG Group [/mxcs/cg-groups/{cg_group_id}]

Resource Attributes:
- *cg_group_id*: required.
  The ID of the CG Group of interest.

### Get [GET]

Response Attributes:
- *id*: required, string.
  Group ID.
- *aliasName*: required, string.
  Group alias name.
- *cgList*: required, string array.
  IDs of the CGs in the Group.

+ Response 200 (application/json)

        {
            "id": "moxa-2014",
            "aliasName": "moxa-2014",
            "cgList": [
                "cg-0090e8001234",
                "cg-0090e8004321"
            ]
        }

### Update CG Group [PUT]

Request Attributes:
- *id*: optional, string.
  If given, the value should match *cg_group_id* in resource URI.
- *aliasName*: optional, string.
- *cgList*: optional, string array.

Response Attributes:
- *message*: required, string.
  Human-readable message.

+ Request (application/json)

        {
            "aliasName": "moxa-2014",
            "cgList": [
                "cg-0090e8001234"
            ]
        }

+ Response 200 (application/json)

        {
            "message": "success"
        }

## Get Equipment Group List [/mxcs/eq-groups?keyword={keyword}&page={page}&pageSize={pageSize}]

Query Attributes:
- keyword: optional, string.
  Return only Equipment Groups with *id* similar to the given string.
- page: optional, integer. Default *1*.
- pageSize: optional, integer. Default *30*.

### Get [GET]

Response Attributes:
- *totalCount*: required, integer.
- *pageSize*: required, integer.
- *page*: required, integer.
- *eqGroupList*: required, object list.
    - *id*: required, string.
      Group ID.
    - *aliasName*: required, string.
      Group alias name.
    - *eqList*: required, string array.
      IDs of the Equipments in the Group.

+ Response 200 (application/json)

        {
            "totalCount": 2,
            "pageSize": 30,
            "page": 1,
            "eqGroupList": [
                {
                    "id": "moxa-2014",
                    "aliasName": "moxa-2014",
                    "eqList": [
                        "iologik",
                        "uc-8100"
                    ]
                },
                {
                    "id": "moxa-2015",
                    "aliasName": "moxa-2015",
                    "eqList": [
                    ]
                }
            ]
        }

## Manage Equipment Group [/mxcs/eq-groups]

### Create Equipment Group [POST]

Request Attributes:
- *id*: required, string.
- *aliasName*: required, string.
  Can be empty-string.
- *eqList*: required, string list.
  A list of CG IDs to be inserted into the group.

Response Attributes:
- *id*: required, ID of the Equipment Group just created.

+ Request (application/json)

        {
            "id": "moxa-2014",
            "aliasName": "moxa-2014",
            "eqList": [
                "iologik",
                "uc-8100"
            ]
        }

+ Response 200 (application/json)

        {
            "id": "moxa-2014"
        }

### Delete Equipment Group List [DELETE]

Request Attributes:
- *eqGroupList*: required, string array.
  Contains a list of IDs of the Equipments to be deleted.

Response Attributes:
- *message*: required, string.
  Human-readable message.

+ Request (application/json)

        {
            "eqGroupList": [
                "moxa-2014",
                "moxa-2015"
            ]
        }

+ Response 200 (application/json)

        {
            "message": "success"
        }

## Manage Equipment Group [/mxcs/eq-groups/{eq_group_id}]

Resource Attributes:
- *eq_group_id*: required.
  The ID of the Equipment Group of interest.

### Get [GET]

Response Attributes:
- *id*: required, string.
  Group ID.
- *aliasName*: required, string.
  Group alias name.
- *eqList*: required, string array.
  IDs of the Equipments in the Group.

+ Response 200 (application/json)

        {
            "id": "moxa-2014",
            "aliasName": "moxa-2014",
            "eqList": [
                "iologik",
                "uc-8100"
            ]
        }

### Update CG Group [PUT]

Request Attributes:
- *id*: optional, string.
  If given, the value should match *eq_group_id* in resource URI.
- *aliasName*: optional, string.
- *eqList*: optional, string array.

Response Attributes:
- *message*: required, string.
  Human-readable message.

+ Request (application/json)

        {
            "aliasName": "moxa-2014",
            "eqList": [
                "iologik",
            ]
        }

+ Response 200 (application/json)

        {
            "message": "success"
        }

# group Profile of Equipments and CGs

## All CGs [/mxcs/profile/cgs?gid={gid}&type={type}]
(not implemented yet)
(used in Control Center)
(fixme)

### Get Specific Group information [GET]

Response Attributes:
- gatewayOnlineCount: required, integer.
- gatewayTotalCount: required, integer.
- equipmentOnlineCount: required, integer.
- equipmentTotalCount: required, integer.

Note:
- CG Online Rate = *gatewayOnlineCount* / *gatewayTotalCount*

+ Response 200 (application/json)

    + Body

            {
                "gatewayOnlineCount": 9,
                "gatewayTotalCount": 10,
                "equipmentOnlineCount": 15,
                "equipmentTotalCount": 20
            }

## All Equipments [/mxcs/profile/equipments?gid={gid}&type={type}]
(not implemented yet)
(used in Control Center)

### Get Specific Group information [GET]

Response Attributes:
- equipmentOnlineCount: required, integer.
- equipmentTotalCount: required, integer.

+ Response 200 (application/json)

    + Body

            {
                "equipmentOnlineCount": 15,
                "equipmentTotalCount": 20
            }

# group Reading Management

## Channels [/mxcs/equipments/{equipment_name}/channels&page={page}?pageSize={pageSize}]

Resource Attributes:
- *equipment_name*: required, string.

Query Attributes:
- *page*: optional, integer. Default *1*.
- *pageSize*: optional, integer. Default *30*.

### Get Channel List [GET]

Response Attributes:
- *totalCount*: required, integer. Number of Channels in the list.
- *pageSize*: required, integer.
- *page*: required, integer.
- *chanList*: required, object list.
    - *name*: required, string. Channel name.
    - *value*: required, string or float. Latest value received.
    - *time*: required, string in Datetime format. Latest value received time.

+ Response 200 (application/json)

        {
            "totalCount": 2,
            "pageSize": 10,
            "page": 1,
            "chanList": [
                {
                    "name": "ai0",
                    "value": 1.0264739990234375,
                    "time": "2015-01-14T07:43:46.814000Z"
                },
                {
                    "name": "di0",
                    "value": "on",
                    "time": "2015-01-14T10:08:51.181000Z"
                }
            ]
        }

## Readings [/mxcs/equipments/{equipment_name}/channels/{channel_name}/readings?startTime={startTime}&endTime={endTime}&page={page}&pageSize={pageSize}&asc={asc}]

Resource Attributes:
- *equipment_name*: required, string.
- *channel_name*: required, string.

Query Attributes:
- *startTime*: optional, string in *Datetime* format.
- *endTime*: optional, string in *Datetime* format.
- *page*: optional, integer. Default *1*.
- *pageSize*: optional, integer. Default *30*.
- *asc*: optional, boolean. true: ascend(oldest first), false: descend(latest first). Default *false*.

### Query Sensor Data [GET]

Response Attributes:
- *totalCount*: required, integer. Number of Readings in the list.
- *pageSize*: required, integer.
- *page*: required, integer.
- *readingList*: required, object list.
    - *value*: required, string or float.
    - *time*: required, string in Datetime format.

+ Response 200 (application/json)

        {
            "totalCount": 2,
            "pageSize": 10,
            "page": 1,
            "readingList": [
                {
                    "value": 1.0255584716796875,
                    "time": "2015-01-14T10:08:51.181000Z"
                },
                {
                    "value": 1.0264739990234375,
                    "time": "2015-01-14T07:43:46.814000Z"
                }
            ]
        }

# group Cloud Server Configuration

## Configuration  [/mxcs/config]

### Get Configuration [GET]

Response Attributes:
- *expireTimeDay*: required, integer. Reading expire time in days.

+ Response 200 (application/json)

        {
            "expireTimeDay": 90
        }

### Update Configuration [PUT]

Request Attributes:
- *expireTimeDay*: required, integer.

Response Attributes:
- *expireTimeDay*: required, integer.

+ Request (application/json)

        {
            "expireTimeDay": 90
        }

+ Response 200 (application/json)

        {
            "expireTimeDay": 90
        }

# Group CG Online Count

## CG Online Count [/mxcs/history/cg-online-count?gid={gid}&type={type}&endDate={endDate}&limit={limit}]

Query Attributes:
- *gid*: optional, integer. Group ID.
- *type*: optional, string. Must be "gateway". Must exist when *gid* is given.
- *endDate*: required, string in *Date* format.
- *limit*: required. integer. Days to return.

### Get CG Online Count Data [GET]

Response Attributes:
- *historyList*: required, object list.
    - *date*: required, string in *Date* format.
    - *count*: required, integer.

+ Response 200 (application/json)

        {
            "historyList": [
                {
                    "date": "2015-01-10",
                    "count": 10
                },
                {
                    "date": "2015-01-11",
                    "count": 11
                },
                {
                    "date": "2015-01-12",
                    "count": 19
                },
                {
                    "date": "2015-01-13",
                    "count": 12
                },
                {
                    "date": "2015-01-14",
                    "count": 15
                },
                {
                    "date": "2015-01-15",
                    "count": 20
                },
                {
                    "date": "2015-01-16",
                    "count": 25
                }
            ]
        }

# Group Equipment Online Count

## Equipment Online Count [/mxcs/history/equipment-online-count?gid={gid}&type={type}&endDate={endDate}&limit={limit}]

Query Attribute:
- *gid*: optional, integer. Group ID.
- *type*: optional, string([gateway|equipment]).
- *endDate*: optional, string in *Date* format. Default *current-date*.
- *limit*: optional, integer. Default *7*.

### Get Equipment Online Count Data [GET]

Response Attribute:
- *historyList*: required, object list.
    - *date*: required, string in *Date* format.
    - *count*: required, integer.

+ Response 200 (application/json)

        {
            "historyList": [
                {
                    "date": "2015-01-10",
                    "count": 10
                },
                {
                    "date": "2015-01-11",
                    "count": 11
                },
                {
                    "date": "2015-01-12",
                    "count": 19
                },
                {
                    "date": "2015-01-13",
                    "count": 12
                },
                {
                    "date": "2015-01-14",
                    "count": 15
                },
                {
                    "date": "2015-01-15",
                    "count": 20
                },
                {
                    "date": "2015-01-16",
                    "count": 25
                }
            ]
        }

# group CG Reading Count

## CG Reading Count [/mxcs/history/cg-reading-count?gid={gid}&type={type}&endDate={endDate}&limit={limit}]

Query Attribute:
- *gid*: optional, integer. Group ID.
- *type*: optional, string. Must be "gateway" when *gid* is given.
- *endDate*: optional, string in *Date* format. Default *current-date*.
- *limit*: optional, integer. Number of records to return. Default *7*.

### Get CG Reading Count [GET]

Response Attribute:
- *historyList*: required. If no data will return [].
    - *date*: required, string.
    - *count*: required, decimal or string.

+ Response 200 (application/json)

        {
            "historyList": [
                {
                    "date": "2015-01-10",
                    "count": 10
                },
                {
                    "date": "2015-01-11",
                    "count": 11
                },
                {
                    "date": "2015-01-12",
                    "count": 19
                },
                {
                    "date": "2015-01-13",
                    "count": 12
                },
                {
                    "date": "2015-01-14",
                    "count": 15
                },
                {
                    "date": "2015-01-15",
                    "count": 20
                },
                {
                    "date": "2015-01-16",
                    "count": 25
                }
            ]
        }

# Group Equipment Reading Count

## Equipment Reading Count [/mxcs/history/equipment-reading-count?gid={gid}&type={type}&endDate={endDate}&limit={limit}]

Provide the number of Readings reported by all or a group of Equipments.

Query Attribute:
- *gid*: optional, integer. Group ID.
- *type*: optional, string([gateway|equipment]).
- *endDate*: optional, string *Date* format. Default *current-date*.
- *limit*: optional, integer. Number of records to return. Default *7*.

### Get Equipment Reading Count [GET]

Response Attribute:
- *historyList*: required, object list.
    - *date*: required, string in *Datetime* format.
    - *count*: required, integer.

+ Response 200 (application/json)

        {
            "historyList": [
                {
                    "date": "2015-01-10",
                    "count": 10
                },
                {
                    "date": "2015-01-11",
                    "count": 11
                },
                {
                    "date": "2015-01-12",
                    "count": 19
                },
                {
                    "date": "2015-01-13",
                    "count": 12
                },
                {
                    "date": "2015-01-14",
                    "count": 15
                },
                {
                    "date": "2015-01-15",
                    "count": 20
                },
                {
                    "date": "2015-01-16",
                    "count": 25
                }
            ]
        }
